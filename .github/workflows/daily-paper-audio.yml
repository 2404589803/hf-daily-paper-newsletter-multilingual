name: Daily Paper Audio Generation

on:
  workflow_dispatch:
    inputs:
      date:
        description: '指定日期 (YYYY-MM-DD，留空则使用当天日期)'
        required: false
        type: string
      start_date:
        description: '开始日期 (YYYY-MM-DD)'
        required: false
        type: string
      end_date:
        description: '结束日期 (YYYY-MM-DD)'
        required: false
        type: string
  schedule:
    - cron: '20 10 * * 1-5'  # UTC 10:20 (Beijing 18:20) 仅在工作日运行
  workflow_run:
    workflows: ["Daily Paper Translation"]
    types:
      - completed

jobs:
  generate-audio:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Set timezone
      run: |
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        echo "Asia/Shanghai" | sudo tee /etc/timezone
        echo "设置时区为北京时间"
        date
        
    - name: Check if weekend
      id: check_weekend
      run: |
        DAYOFWEEK=$(date +%u)
        if [[ "${{ github.event.name }}" != "workflow_dispatch" && $DAYOFWEEK -gt 5 ]]; then
          echo "IS_WEEKEND=true" >> $GITHUB_OUTPUT
        else
          echo "IS_WEEKEND=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Install dependencies
      if: steps.check_weekend.outputs.IS_WEEKEND != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run audio generation
      if: steps.check_weekend.outputs.IS_WEEKEND != 'true'
      run: |
        # 确保目录存在
        mkdir -p Audio_papers
        
        # 设置日期
        if [[ -n "${{ github.event.inputs.start_date }}" && -n "${{ github.event.inputs.end_date }}" ]]; then
          # 使用日期范围
          CMD_DATE="--start_date ${{ github.event.inputs.start_date }} --end_date ${{ github.event.inputs.end_date }}"
        else
          # 使用单个日期（指定日期或当天日期）
          if [[ -n "${{ github.event.inputs.date }}" ]]; then
            DATE="${{ github.event.inputs.date }}"
          else
            DATE=$(TZ='Asia/Shanghai' date '+%Y-%m-%d')
          fi
          echo "使用日期: $DATE"
          CMD_DATE="--date $DATE"
        fi
        
        # 执行音频生成
        python generate_audio.py $CMD_DATE
      env:
        TZ: Asia/Shanghai
        
    - name: Commit and push if changed
      if: steps.check_weekend.outputs.IS_WEEKEND != 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add Audio_papers/
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update audio files" && git push) 